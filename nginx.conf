load_module modules/ndk_http_module.so;
load_module modules/ngx_http_lua_module.so;
events {}
http {
    log_format custom escape=json '{'
        '"request_uri": "$request_uri",'
        '"request_body": "$request_body",'
        '"response_body": "$resp_body",'
        '"response_status": "$status"'
    '}';


    map $request_uri $log_path_filter {
        ~^/v1.* 1;
        default 0;
    }

    # Don't log when X-Spacefill-Debug response header contains "no"
    map $upstream_http_x_spacefill_debug $loggable {
        no  0;
        default $log_path_filter;
    }

    access_log /var/log/nginx/access.log custom if=$loggable;
    server {
        listen 8080;
        location / {
            proxy_pass http://rest-api:5000;
        }

        lua_need_request_body on;

        set $resp_body "";
        body_filter_by_lua '
          local resp_body = string.sub(ngx.arg[1], 1, 1000)
          ngx.ctx.buffered = (ngx.ctx.buffered or "") .. resp_body
          if ngx.arg[2] then
            ngx.var.resp_body = ngx.ctx.buffered
          end
        ';
    }
}
